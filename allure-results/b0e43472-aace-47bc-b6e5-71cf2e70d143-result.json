{"name": "Change profile name", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <feature_candidate_edit_test.TestCandidateFeature object at 0x7fde0d3ebb30>\n\n    @allure.title(\"Change profile name\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    def test_change_firstname(self):\n        self.login_page.open(self)\n        self.login_page.enter_email(self.data.EMAIL)\n        self.login_page.enter_password(self.data.PASSWORD)\n        self.login_page.click_login_submit_button()\n>       self.candidate_page.is_opened()\n\ntests/feature_candidate_edit_test.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:20: in is_opened\n    self.wait.until(EC.url_to_be(self.PAGE_URL))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1c370ab1da515a85a58077821364759a\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7fde0c2f2020>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Open https://matchminds.club/auth/login page", "status": "passed", "start": 1710492748888, "stop": 1710492750870}, {"name": "Enter email", "status": "passed", "parameters": [{"name": "email", "value": "'tatsi9it@yandex.ru'"}], "start": 1710492750871, "stop": 1710492751062}, {"name": "Enter password", "status": "passed", "parameters": [{"name": "password", "value": "'4r5t6yhgf'"}], "start": 1710492751062, "stop": 1710492751192}, {"name": "Click Login button", "status": "passed", "start": 1710492751193, "stop": 1710492751286}, {"name": "Page https://matchminds.club/candidate/32 is opened", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/usr/workspace/base/base_page.py\", line 20, in is_opened\n    self.wait.until(EC.url_to_be(self.PAGE_URL))\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1710492751286, "stop": 1710492761394}], "start": 1710492748888, "stop": 1710492761407, "uuid": "da91cda6-d551-4a52-bee1-ceeeb0eb30ab", "historyId": "ddcd0b724add343b9a3e5640a2cf46db", "testCaseId": "ddcd0b724add343b9a3e5640a2cf46db", "fullName": "tests.feature_candidate_edit_test.TestCandidateFeature#test_change_firstname", "labels": [{"name": "feature", "value": "Profile functionality"}, {"name": "severity", "value": "Critical"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "feature_candidate_edit_test"}, {"name": "subSuite", "value": "TestCandidateFeature"}, {"name": "host", "value": "3b226c53dbcc"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.feature_candidate_edit_test"}]}